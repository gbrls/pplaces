#![feature(type_alias_impl_trait)]

use clap::Parser;

#[derive(Parser, Debug)]
enum CmdType {
    /// Recursively look for git repositories in given path
    Scan { path: String },
    /// Wrapper around git clone to check if the repo is already cloned
    Clone { url: String },
    /// Show all git repos with some metadata
    Show,
}

/// It'll have different types of commands such as scan, clone, show
#[derive(Parser, Debug)]
#[clap(author, version, about)]
struct CliArgs {
    #[clap(subcommand)]
    cmd_type: CmdType,
}

fn main() {
    let args = CliArgs::parse();

    match args.cmd_type {
        CmdType::Scan { ref path } => {}
        CmdType::Clone { ref url } => {}
        CmdType::Show => {}
    }

    println!("{args:?}");
}
